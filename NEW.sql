CREATE TABLE Клиенты (
    Код_клиента INT PRIMARY KEY IDENTITY(1,1),
    Фамилия NVARCHAR(100),
    Имя NVARCHAR(100),
    Отчество NVARCHAR(100),
    Дата_рождения DATE,
    Представитель_фирмы NVARCHAR(100),
    Адрес NVARCHAR(255),
    Контактный_телефон NVARCHAR(15)
);

CREATE TABLE Товары (
    Код_товара INT PRIMARY KEY IDENTITY(1,1),
    Название NVARCHAR(255),
    Число_шт_в_упаковке INT,
    Цвет NVARCHAR(50),
    Характеристики NVARCHAR(MAX),
    Страна_производства NVARCHAR(100),
    Производитель NVARCHAR(100),
    Срок_годности DATE
);

CREATE TABLE Склад (
    Номер_склада INT PRIMARY KEY IDENTITY(1,1),
    Вместимость INT,
    Адрес_склада NVARCHAR(255),
    Зав_складом NVARCHAR(100)
);

CREATE TABLE Заказ (
    Номер_заказа INT PRIMARY KEY IDENTITY(1,1),
    Дата_заказа DATE,
    Срок_сборки DATE,
    Доп_информация NVARCHAR(MAX),
    Код_клиента INT,
    FOREIGN KEY (Код_клиента) REFERENCES Клиенты(Код_клиента)
);

CREATE TABLE Размещение (
    Дата_отгрузки DATE,
    Код_товара INT,
    Номер_склада INT,
    Количество_упаковок INT,
    Вес DECIMAL(10, 2),
    Отметка_о_получении BIT,
    FOREIGN KEY (Код_товара) REFERENCES Товары(Код_товара),
    FOREIGN KEY (Номер_склада) REFERENCES Склад(Номер_склада),
    PRIMARY KEY (Код_товара, Номер_склада)
);

CREATE TABLE Содержимое_заказа (
    Код_товара INT,
    Номер_заказа INT,
    Количество INT,
    Упаковка INT,
    PRIMARY KEY (Код_товара, Номер_заказа),
    FOREIGN KEY (Код_товара) REFERENCES Товары(Код_товара),
    FOREIGN KEY (Номер_заказа) REFERENCES Заказ(Номер_заказа)
);


INSERT INTO Клиенты (Фамилия, Имя, Отчество, Дата_рождения, Представитель_фирмы, Адрес, Контактный_телефон)
VALUES 
('Иванов', 'Иван', 'Иванович', '1980-01-15', 'Иванов И.И.', 'Москва, ул. Ленина, д. 1', '1234567890'),
('Петров', 'Петр', 'Петрович', '1990-05-20', 'Петров П.П.', 'Санкт-Петербург, ул. Пушкина, д. 2', '0987654321'),
('Сидоров', 'Сидор', 'Сидорович', '1985-10-30', 'Сидоров С.С.', 'Екатеринбург, ул. Чехова, д. 3', '1122334455');

INSERT INTO Товары (Название, Число_шт_в_упаковке, Цвет, Характеристики, Страна_производства, Производитель, Срок_годности)
VALUES 
('Товар 1', 101, 'Красный', 'Характеристика 1', 'Россия', 'Производитель 1', '2025-02-04'),
('Товар 2', 210, 'Синий', 'Характеристика 2', 'Россия', 'Производитель 2', '2025-02-03'),
('Товар 3', 105, 'Зеленый', 'Характеристика 3', 'Россия', 'Производитель 3', '2025-04-15');

INSERT INTO Склад (Вместимость, Адрес_склада, Зав_складом)
VALUES 
(1000, 'Москва, ул. Заводская, д. 1', 'Завод 1'),
(2000, 'Санкт-Петербург, ул. Промышленная, д. 2', 'Завод 2');


INSERT INTO Заказ (Дата_заказа, Срок_сборки, Доп_информация, Код_клиента)
VALUES 
('2023-10-01', '2023-10-05', 'Заказ на поставку', 1),
('2023-10-02', '2023-10-06', 'Заказ на срочную поставку', 2);


INSERT INTO Размещение (Дата_отгрузки, Код_товара, Номер_склада, Количество_упаковок, Вес, Отметка_о_получении)
VALUES 
('2023-10-03', 1, 1, 5, 50.00, 0),
('2023-10-04', 2, 2, 10, 100.00, 1);



INSERT INTO Содержимое_заказа (Код_товара, Номер_заказа, Количество, Упаковка)
VALUES 
(1, 1, 5, 1),
(2, 1, 10, 1),
(1, 2, 3, 1);

--доп для 3 задания
INSERT INTO Заказ (Дата_заказа, Срок_сборки, Доп_информация, Код_клиента)
VALUES 
('2023-06-01', '2023-06-05', 'Летний заказ 1', 1),
('2023-07-10', '2023-07-15', 'Летний заказ 2', 1),
('2023-08-20', '2023-08-25', 'Летний заказ 3', 2);

---


--1 Вывести информацию о содержимом заказов клиентов, сделавших самое большое число заказов.

WITH Заказчики AS (
    SELECT Код_клиента, COUNT(*) AS Количество_заказов
    FROM Заказ
    GROUP BY Код_клиента
),
МаксЗаказчики AS (
    SELECT TOP 1 Код_клиента
    FROM Заказчики
    ORDER BY Количество_заказов DESC
)
SELECT Содержимое_заказа.*, Товары.Название
FROM Содержимое_заказа
JOIN Заказ ON Содержимое_заказа.Номер_заказа = Заказ.Номер_заказа
JOIN Товары ON Содержимое_заказа.Код_товара = Товары.Код_товара
WHERE Заказ.Код_клиента IN (SELECT Код_клиента FROM МаксЗаказчики);



--2 Вывести информацию, о том, сколько раз и в каком количестве был заказан каждый вид товара

SELECT Товары.Название, 
       SUM(Содержимое_заказа.Количество) AS Общее_количество,
       COUNT(Содержимое_заказа.Номер_заказа) AS Количество_заказов
FROM Содержимое_заказа
JOIN Товары ON Содержимое_заказа.Код_товара = Товары.Код_товара
GROUP BY Товары.Название;


--3 Составить список контактных телефонов всех клиентов, которые делают в летний период больше среднего числа заказов

WITH ЗаказыЛетний AS (
    SELECT Код_клиента, COUNT(*) AS Количество_заказов
    FROM Заказ
    WHERE MONTH(Дата_заказа) IN (6, 7, 8) -- Летние месяцы
    GROUP BY Код_клиента
),
Среднее AS (
    SELECT AVG(Количество_заказов) AS Среднее_количество
    FROM ЗаказыЛетний
)
SELECT Клиенты.Контактный_телефон
FROM Клиенты
JOIN ЗаказыЛетний ON Клиенты.Код_клиента = ЗаказыЛетний.Код_клиента
WHERE ЗаказыЛетний.Количество_заказов > (SELECT Среднее_количество FROM Среднее);



--4 Определить, кто из клиентов чаще всего заказывает товары в подарочной упаковке.


SELECT TOP 1 Клиенты.Фамилия, Клиенты.Имя, COUNT(*) AS Количество_заказов
FROM Содержимое_заказа
JOIN Заказ ON Содержимое_заказа.Номер_заказа = Заказ.Номер_заказа
JOIN Клиенты ON Заказ.Код_клиента = Клиенты.Код_клиента
WHERE Содержимое_заказа.Упаковка = 1 -- Предполагая, что 1 означает подарочную упаковку
GROUP BY Клиенты.Фамилия, Клиенты.Имя
ORDER BY Количество_заказов DESC;


--5 Вывести названия товаров, максимальное число упаковок которых было отгружено за один раз на какой-либо склад

SELECT Товары.Название
FROM Размещение
JOIN Товары ON Размещение.Код_товара = Товары.Код_товара
WHERE Количество_упаковок = (
    SELECT MAX(Количество_упаковок)
    FROM Размещение
);


--6 Вывести номера складов, которые хранили более 100 упаковок товара в этом году, и не разу не получали зарубежный товар

SELECT DISTINCT Склад.Номер_склада
FROM Склад
JOIN Размещение ON Склад.Номер_склада = Размещение.Номер_склада
JOIN Товары ON Размещение.Код_товара = Товары.Код_товара
WHERE YEAR(Размещение.Дата_отгрузки) = YEAR(GETDATE())
GROUP BY Склад.Номер_склада
HAVING SUM(Размещение.Количество_упаковок) > 100
AND SUM(CASE WHEN Товары.Страна_производства <> 'Россия' THEN 1 ELSE 0 END) = 0;


--7  Вывести, какой склад чаще всего получал товары самого распространенного производителя

WITH ПопулярныйПроизводитель AS (
    SELECT TOP 1 Производитель, COUNT(*) AS Количество
    FROM Товары
    GROUP BY Производитель
    ORDER BY Количество DESC
),
ЧастотаСкладов AS (
    SELECT Размещение.Номер_склада, COUNT(*) AS Количество_поставок
    FROM Размещение
    JOIN Товары ON Размещение.Код_товара = Товары.Код_товара
    WHERE Товары.Производитель IN (SELECT Производитель FROM ПопулярныйПроизводитель)
    GROUP BY Размещение.Номер_склада
)
SELECT TOP 1 Номер_склада
FROM ЧастотаСкладов
ORDER BY Количество_поставок DESC;



INSERT INTO Клиенты (Фамилия, Имя, Отчество, Дата_рождения, Представитель_фирмы, Адрес, Контактный_телефон)
VALUES 
('Смирнов', 'Алексей', 'Александрович', '1988-03-12', 'Смирнов А.А.', 'Казань, ул. Спортивная, д. 4', '1231231234'),
('Кузнецов', 'Дмитрий', 'Дмитриевич', '1995-04-22', 'Кузнецов Д.Д.', 'Нижний Новгород, ул. Набережная, д. 5', '4564564567');


INSERT INTO Товары (Название, Число_шт_в_упаковке, Цвет, Характеристики, Страна_производства, Производитель, Срок_годности)
VALUES 
('Товар 4', 150, 'Черный', 'Характеристика 4', 'Китай', 'Производитель 4', '2025-12-01'),
('Товар 5', 250, 'Белый', 'Характеристика 5', 'Россия', 'Производитель 5', '2026-01-15');


INSERT INTO Склад (Вместимость, Адрес_склада, Зав_складом)
VALUES 
(1500, 'Казань, ул. Лесная, д. 3', 'Завод 3'),
(2500, 'Нижний Новгород, ул. Фабричная, д. 6', 'Завод 4');


INSERT INTO Размещение (Дата_отгрузки, Код_товара, Номер_склада, Количество_упаковок, Вес, Отметка_о_получении)
VALUES 
('2025-10-05', 3, 1, 120, 1200.00, 1),
('2025-10-06', 4, 3, 90, 900.00, 1),
('2025-10-07', 5, 4, 200, 2000.00, 0);


INSERT INTO Содержимое_заказа (Код_товара, Номер_заказа, Количество, Упаковка)
VALUES 
(4, 2, 5, 1),
(5, 2, 10, 1);
